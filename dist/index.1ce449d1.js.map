{"mappings":"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","sources":["script.js"],"sourcesContent":["'use strict';\n\n/////////////////////////////////////////////////\n/////////////////////////////////////////////////\n// BANKIST APP\n\n// Data\nconst account1 = {\n  owner: 'Jonas Schmedtmann',\n  movements: [200, 450, -400, 3000, -650, -130, 70, 1300],\n  interestRate: 1.2, // %\n  pin: 1111,\n};\n\nconst account2 = {\n  owner: 'Jessica Davis',\n  movements: [5000, 3400, -150, -790, -3210, -1000, 8500, -30],\n  interestRate: 1.5,\n  pin: 2222,\n};\n\nconst account3 = {\n  owner: 'Steven Thomas Williams',\n  movements: [200, -200, 340, -300, -20, 50, 400, -460],\n  interestRate: 0.7,\n  pin: 3333,\n};\n\nconst account4 = {\n  owner: 'Sarah Smith',\n  movements: [430, 1000, 700, 50, 90],\n  interestRate: 1,\n  pin: 4444,\n};\n\nconst accounts = [account1, account2, account3, account4];\n\n// Elements\nconst labelWelcome = document.querySelector('.welcome');\nconst labelDate = document.querySelector('.date');\nconst labelBalance = document.querySelector('.balance__value');\nconst labelSumIn = document.querySelector('.summary__value--in');\nconst labelSumOut = document.querySelector('.summary__value--out');\nconst labelSumInterest = document.querySelector('.summary__value--interest');\nconst labelTimer = document.querySelector('.timer');\n\nconst containerApp = document.querySelector('.app');\nconst containerMovements = document.querySelector('.movements');\n\nconst btnLogin = document.querySelector('.login__btn');\nconst btnTransfer = document.querySelector('.form__btn--transfer');\nconst btnLoan = document.querySelector('.form__btn--loan');\nconst btnClose = document.querySelector('.form__btn--close');\nconst btnSort = document.querySelector('.btn--sort');\n\nconst inputLoginUsername = document.querySelector('.login__input--user');\nconst inputLoginPin = document.querySelector('.login__input--pin');\nconst inputTransferTo = document.querySelector('.form__input--to');\nconst inputTransferAmount = document.querySelector('.form__input--amount');\nconst inputLoanAmount = document.querySelector('.form__input--loan-amount');\nconst inputCloseUsername = document.querySelector('.form__input--user');\nconst inputClosePin = document.querySelector('.form__input--pin');\n\n//Display transactions and sorting them\nconst displayMovements = function (movements, sort = false) {\n  containerMovements.innerHTML = '';\n\n  const movs = sort ? movements.slice().sort((a, b) => a - b) : movements;\n\n  movs.forEach(function (mov, i) {\n    const type = mov > 0 ? 'deposit' : 'withdrawal';\n    const html = `\n    <div class=\"movements__row\">\n      <div class=\"movements__type movements__type--${type}\">${\n      i + 1\n    } ${type}</div>\n      <div class=\"movements__value\">${mov}€</div>\n  </div>`;\n\n    containerMovements.insertAdjacentHTML('afterbegin', html);\n  });\n};\n\n//Calculates account balance using .reduce method and display\nconst calcDisplayBalance = function (acc) {\n  acc.balance = acc.movements.reduce((acc, mov) => acc + mov, 0);\n  labelBalance.textContent = `${acc.balance}€`;\n};\n\n//Calculate and displays the summary\nconst calcDisplaySummary = function (account) {\n  const incomes = account.movements\n    .filter(mov => mov > 0)\n    .reduce((acc, mov) => (acc += mov), 0);\n  labelSumIn.textContent = `${incomes}€`;\n\n  const out = account.movements\n    .filter(mov => mov < 0)\n    .reduce((acc, mov) => (acc += mov), 0);\n  labelSumOut.textContent = `${Math.abs(out)}€`;\n\n  const interset = account.movements\n    .filter(mov => mov > 0)\n    .map(deposite => (deposite * account.interestRate) / 100)\n    .filter((int, i, arr) => int >= 1)\n    .reduce((acc, int) => (acc += int), 0);\n  labelSumInterest.textContent = `${Math.abs(interset).toFixed(2)}€`;\n};\n\n//Creates shorter user names from full names using .map metod\nconst createUserNames = function (accs) {\n  //foreach method creates a side effect on the account sobjects\n  accs.forEach(function (acc) {\n    acc.userName = acc.owner\n      .toLowerCase()\n      .split(' ')\n      .map(name => name[0])\n      .join('');\n  });\n};\ncreateUserNames(accounts);\n\nlet currentAccount;\n\n//Update and Display movements, balance, summary\nconst updateUI = function (currentAccount) {\n  displayMovements(currentAccount.movements);\n  calcDisplayBalance(currentAccount);\n  calcDisplaySummary(currentAccount);\n};\n\n//Loging in to an account\nbtnLogin.addEventListener('click', function (e) {\n  //Prevent form from submitting\n  e.preventDefault();\n\n  //Sets current account to logged in user\n  currentAccount = accounts.find(\n    acc => acc.userName === inputLoginUsername.value\n  );\n  if (currentAccount?.pin === Number(inputLoginPin.value)) {\n    //Display UI and message\n    labelWelcome.textContent = `Welcome back ${\n      currentAccount.owner.split(' ')[0]\n    }`;\n    containerApp.style.opacity = 100;\n\n    //Clear input fields\n    inputLoginUsername.value = '';\n    inputLoginPin.value = '';\n    inputLoginPin.blur();\n\n    //Update UI\n    updateUI(currentAccount);\n  }\n});\n\n//Transfer money from yours to others\nbtnTransfer.addEventListener('click', function (e) {\n  e.preventDefault();\n  const amount = Number(inputTransferAmount.value);\n  const reserverAcc = accounts.find(\n    acc => acc.userName === inputTransferTo.value\n  );\n\n  inputTransferAmount.value = inputTransferTo.value = '';\n\n  if (\n    amount > 0 &&\n    reserverAcc &&\n    currentAccount.balance >= amount &&\n    currentAccount.userName !== reserverAcc.userName\n  ) {\n    //Doing the transfer\n    currentAccount.movements.push(-amount);\n    reserverAcc.movements.push(amount);\n\n    //Update UI\n    updateUI(currentAccount);\n  }\n});\n\n//Close your account\nbtnClose.addEventListener('click', function (e) {\n  e.preventDefault();\n  if (\n    currentAccount.userName === inputCloseUsername.value &&\n    currentAccount.pin === Number(inputClosePin.value)\n  ) {\n    const index = accounts.findIndex(\n      acc => acc.userName === currentAccount.userName\n    );\n    // console.log(index);\n    accounts.splice(index, 1);\n\n    //Hide UI\n    containerApp.style.opacity = 0;\n\n    //Reset Welcome label\n    labelWelcome.textContent = `Log in to get started`;\n  }\n  //Clear input fields\n  inputCloseUsername.value = '';\n  inputClosePin.value = '';\n  inputCloseUsername.blur();\n});\n\n//Requesting for a loan\nbtnLoan.addEventListener('click', function (e) {\n  e.preventDefault();\n\n  const amount = Number(inputLoanAmount.value);\n  if (\n    amount > 0 &&\n    currentAccount.balance > 0 &&\n    currentAccount.movements.some(mov => mov >= amount * 0.1)\n  ) {\n    currentAccount.movements.push(amount);\n    updateUI(currentAccount);\n  }\n  inputLoanAmount.value = '';\n});\n\n//Sort or unsort the movements\nlet sorted = false;\n\nbtnSort.addEventListener('click', function (e) {\n  e.preventDefault();\n  displayMovements(currentAccount.movements, !sorted);\n  sorted = !sorted;\n});\n\n/////////////////////////////////////////////////\n/////////////////////////////////////////////////\n// LECTURES\n\n// const currencies = new Map([\n//   ['USD', 'United States dollar'],\n//   ['EUR', 'Euro'],\n//   ['GBP', 'Pound sterling'],\n// ]);\n\n// /////////////////////////////////////////////////\n\n//For Each\n// for (const [i, movement] of movements.entries()) {\n//   if (movement > 0) {\n//     console.log(`Movement ${i + 1}: You deposited ${movement}`);\n//   } else {\n//     console.log(`Movement ${i + 1}: You withdrew ${Math.abs(movement)}`);\n//   }\n// }\n// console.log('-----FOR EACH--------');\n\n// //continue and break statements will not work with .forEach\n// movements.forEach(function (mov, i, arr) {\n//   if (mov > 0) {\n//     console.log(`Movement ${i + 1}: You deposited ${mov}`);\n//   } else {\n//     console.log(`Movement ${i + 1}: You withdrew ${Math.abs(mov)}`);\n//   }\n// });\n\n// //SLICE - Does not mutate original array\n// let arr = ['a', 'b', 'c', 'd', 'e'];\n// console.log(arr.slice(2));\n// console.log(arr.slice(2, 4));\n// console.log(arr.slice(-1));\n// console.log(arr.slice(1, -2));\n// console.log(arr.slice()); //To make a shallow copy of an array\n\n// //SPLICE - Mutates original array\n// // console.log(arr.splice(2));\n// arr.splice(-1);\n// arr.splice(1, 2); //Go to position one and delete two elements\n// console.log(arr);\n\n// //REVERSE - Mutates the original array\n// arr = ['a', 'b', 'c', 'd', 'e'];\n// const arr2 = ['j', 'i', 'h', 'g', 'f'];\n// console.log(arr2.reverse());\n// console.log(arr2);\n\n// //Concat\n// const letters = arr.concat(arr2);\n// console.log(letters);\n// console.log([...arr, ...arr2]);\n\n// //Join\n// console.log(letters.join('-'));\n\n// const arr = [23, 11, 64];\n// console.log(arr[0]);\n// console.log(arr.at(0));\n\n// //Ways to get last element\n// console.log(arr[arr.length - 1]);\n// console.log(...arr.slice(-1));\n\n// //Last element with .at\n// console.log(arr.at(-1));\n// console.log('Jonas'.at(-1));\n\n//For each with a Map\n// const currencies = new Map([\n//   ['USD', 'United States dollar'],\n//   ['EUR', 'Euro'],\n//   ['GBP', 'Pound sterling'],\n// ]);\n\n// currencies.forEach(function (vale, key, map) {\n//   console.log(`${key}: ${vale}`);\n// });\n\n// //ForEach with a Set\n// const currenciesUnique = new Set(['USD', 'GBP', 'USD', 'EUR', 'EUR']);\n\n// console.log(currenciesUnique);\n\n// currenciesUnique.forEach(function (value, _, set) {\n//   console.log(`${value}`);\n// });\n\n//1.\n\n// const checkDogs = function (juliaData, KateData) {\n//   const juliaCopy = juliaData.slice();\n//   const juliaCorrected = juliaCopy.slice(1, -2);\n//   const collection = juliaCorrected.concat(KateData);\n//   collection.forEach(function (age, i) {\n//     if (age >= 3) {\n//       console.log(`Dog number ${i + 1} is an adult, and is ${age} years old`);\n//     } else {\n//       console.log(`Dog number ${i + 1} is still a puppy ⚽`);\n//     }\n//   });\n// };\n\n// checkDogs(juliaData, KateData);\n\n// const movements = [200, 450, -400, 3000, -650, -130, 70, 1300];\n\n// const eurToUsd = 1.1;\n\n// const movementsUSD = movements.map(mov => mov * eurToUsd);\n\n// console.log(movements);\n// console.log(movementsUSD);\n\n// const movementDescriptions = movements.map(\n//   (mov, i) =>\n//     `Movement ${i + 1}: You ${mov > 0 ? 'deposited' : 'withdrew'} ${Math.abs(\n//       mov\n//     )}`\n// );\n\n// console.log(movementDescriptions);\n\n// const deposits = movements.filter(mov => mov > 0);\n\n// const withdrawals = movements.filter(mov => mov < 0);\n\n// console.log(movements);\n// console.log(deposits);\n// console.log(withdrawals);\n\n// console.log(movements);\n\n//Accumulator is like a snow ball\n// const balance = movements.reduce(function (acc, cur, i, arr) {\n//   console.log(`Iteration ${i}: Accumilator value: ${acc}`);\n//   return acc + cur;\n// }, 0);\n\n// const balance = movements.reduce((acc, cur) => acc + cur, 0);\n// console.log(balance);\n\n//Maximum value\n// const maxValue = movements.reduce(\n//   (acc, mov) => (acc < mov ? (acc = mov) : acc),\n//   0\n// );\n\n// console.log(maxValue);\n\n// const juliaData = [5, 2, 4, 1, 15, 8, 3];\n// const KateData = [16, 6, 10, 5, 6, 1, 4];\n\n// const ages = function calcAverageHumanAge(arr1) {\n//   const humanAge = arr1.map(dogAge =>\n//     dogAge > 2 ? 16 + 4 * dogAge : 2 * dogAge\n//   );\n//   console.log(humanAge);\n\n//   const adultDogs = humanAge.filter(dogAge => dogAge >= 18);\n//   console.log(adultDogs);\n\n//   const average = adultDogs.reduce(\n//     (acc, age) => (acc += age / adultDogs.length),\n//     0\n//   );\n//   return average;\n// };\n\n// const ages = function calcAverageHumanAge(arr1) {\n//   return arr1\n//     .map(dogAge => (dogAge > 2 ? 16 + 4 * dogAge : 2 * dogAge))\n//     .filter(dogAge => dogAge >= 18)\n//     .reduce((acc, age, i, arr) => (acc += age / arr.length), 0);\n// };\n\n// console.log(ages(juliaData));\n// console.log(ages(KateData));\n// console.log(ages(dogAges));\n\n// const euroToUSD = 1.1;\n\n// //PIPELINE\n// const sumOfUSDValues = function (movements) {\n//   return movements\n//     .filter(mov => mov > 0)\n//     .map((mov, i, arr) => {\n//       console.log(arr);\n//       return mov * euroToUSD;\n//     })\n//     .reduce((acc, mov) => (acc += mov), 0);\n// };\n\n// console.log(sumOfUSDValues(movements));\n\n// const firstWithdrawal = movements.find(mov => mov < 0);\n// console.log(movements);\n// console.log(firstWithdrawal);\n\n// console.log(accounts);\n\n// const account = accounts.find(acc => acc.owner === 'Jessica Davis');\n\n// const acc = function (accs) {\n//   for (const acc of accounts) {\n//     if (acc.owner === 'Jessica Davis') {\n//       return acc;\n//     }\n//   }\n// };\n\n// console.log(account);\n// console.log(acc(accounts));\n\n// console.log(movements);\n\n// //EQUALITY\n// console.log(movements.includes(-130));\n\n// //CONDITION\n// console.log(movements.some(mov => mov > 0));\n\n// Every\n// console.log(account4.movements.every(deposit));\n\n//Seperate call back\n// const deposit = mov => mov > 0;\n// console.log(account4.movements.every(deposit));\n// const movements = [200, 450, -400, 3000, -650, -130, 70, 1300];\n\n// const arr = [[1, 2, 3], [4, 5, 6], 7, 8];\n// console.log(arr.flat());\n\n// const arrDeep = [[[1, 2], 3], [4, [5, 6]], 7, 8];\n// console.log(arrDeep.flat(2));\n\n// const accountMovements = accounts.map(acc => acc.movements);\n// console.log(accountMovements);\n\n// const allMovements = accountMovements.flat();\n// console.log(allMovements);\n\n// const overallBalance = allMovements.reduce((acc, mov) => (acc += mov), 0);\n// console.log(overallBalance);\n\n// //with .flat() method\n// const overallBalance2 = accounts\n//   .map(acc => acc.movements)\n//   .flat()\n//   .reduce((acc, mov) => (acc += mov), 0);\n// console.log(overallBalance2);\n\n// //with .flatmap method\n// const overallBalance3 = accounts\n//   .flatMap(acc => acc.movements)\n//   .reduce((acc, mov) => (acc += mov), 0);\n\n// console.log(overallBalance3);\n\n// //Strings\n// const owners = ['Jonas', 'Zach', 'Adam', 'Martha'];\n// console.log(owners.sort());\n// console.log(owners);\n\n// //Numbers\n// console.log(movements);\n\n//Accending\n//return < 0, A,B (keep order)\n//return > 0, B,A (switch order)\n// movements.sort((a, b) => {\n//   if (a > b) return 1;\n//   if (a < b) return -1;\n// });\n\n// movements.sort((a, b) => a - b);\n// console.log(movements);\n\n// movements.sort((a, b) => b - a);\n// console.log(movements);\n\n// //Decsending\n// movements.sort((a, b) => {\n//   if (a > b) return -1;\n//   if (a < b) return 1;\n// });\n// console.log(movements);\n\n// //.fill method\n// const arr = [1, 2, 3, 4, 5, 6, 7];\n// console.log(new Array(1, 2, 3, 4, 5, 6, 7));\n\n// const x = new Array(7);\n// console.log(x);\n\n// // x.fill(1);\n// x.fill(1, 3, 5);\n// console.log(x);\n\n// arr.fill(23, 2, 6);\n// console.log(arr);\n\n// //Array.from\n// const y = Array.from({ length: 7 }, ele => 1);\n// console.log(y);\n\n// const z = Array.from({ length: 7 }, (_, i) => i + 1);\n// console.log(z);\n\n// const diceRolls = Array.from({ length: 100 }, ele =>\n//   Math.trunc(Math.random() * 6 + 1)\n// );\n// console.log(diceRolls);\n\n// labelBalance.addEventListener('click', function () {\n//   const movementsUI = Array.from(\n//     document.querySelectorAll('.movements__value'), //.querySelector returns a node list\n//     el => Number(el.textContent.replace('€', ''))\n//   );\n//   console.log(movementsUI);\n// });\n\n// const movementsUI2 = [...document.querySelectorAll('.movements__value')];\n// console.log(movementsUI2);\n\n// //1.\n// const bankDepositSum = accounts\n//   .flatMap(acct => acct.movements)\n//   .filter(mov => mov > 0)\n//   .reduce((acc, mov) => (acc += mov), 0);\n// console.log(bankDepositSum);\n\n// //2.\n// // const numDeposites1000 = accounts\n// //   .flatMap(acct => acct.movements)\n// //   .filter(mov => mov > 1000).length;\n\n// const numDeposites1000 = accounts\n//   .flatMap(acct => acct.movements)\n//   .reduce((count, mov) => (mov > 1000 ? ++count : count), 0); //prefixed plus operator was used\n// console.log(numDeposites1000);\n\n// //3.\n// const { deposits, withdrawals } = accounts\n//   .flatMap(acc => acc.movements)\n//   .reduce(\n//     (sums, cur) => {\n//       cur > 0 ? (sums.deposits += cur) : (sums.withdrawals += cur);\n//       return sums;\n//     },\n//     { deposits: 0, withdrawals: 0 }\n//   );\n\n// // console.log(sums);\n// console.log(deposits, withdrawals);\n\n//4.\n// const convertTitleCase = function (string) {\n//   const exceptions = ['a', 'an', 'the', 'but', 'or', 'on', 'in', 'with', 'and'];\n\n//   const capitalize = str => str.replace(str[0], str.charAt(0).toUpperCase());\n\n//   const titleCase = string\n//     .toLowerCase()\n//     .split(' ')\n//     .map(word => (exceptions.includes(word) ? word : capitalize(word)))\n//     .join(' ');\n//   return capitalize(titleCase);\n// };\n\n// console.log(\n//   convertTitleCase('and this is a NICE title on the paPer that I saw')\n// );\n\nconst dogs = [\n  { weight: 22, curFood: 250, owners: ['Alice', 'Bob'] },\n  { weight: 8, curFood: 200, owners: ['Matilda'] },\n  { weight: 13, curFood: 275, owners: ['Sarah', 'John'] },\n  { weight: 32, curFood: 340, owners: ['Michael'] },\n];\n//1.\n//Calculate recommended food portion and add to the object\nconst addRecFoodPortion = dogs.forEach(function (dog, i, dogs) {\n  dog.recFood = Number((dog.weight ** 0.75 * 28).toFixed(2));\n});\n\nconsole.log(dogs);\n\n// 2. Sahah's dog\nconst saraDog = dogs.find(dog => dog.owners.includes('Sarah'));\nconsole.log(\n  `Sarah's dog is eating too ${\n    saraDog.curFood > saraDog.recFood ? 'much' : 'little'\n  } food`\n);\n\n//3. ,4.\n\nconst dogOwners = function (dogs) {\n  const owners = dogs\n    .filter(dog => dog.curFood > dog.recFood * 1.1)\n    .flatMap(ele => ele.owners);\n\n  return owners;\n};\n\nconsole.log(dogOwners(dogs));\nconsole.log(`${dogOwners(dogs).join(' and ')}'s dogs eat too much`);\n\nconst ownersEatTooLess = dogs\n  .filter(dog => dog.curFood < dog.recFood * 0.9)\n  .flatMap(ele => ele.owners);\nconsole.log(ownersEatTooLess);\n\nconsole.log(`${ownersEatTooLess.join(' and ')}'s dogs eat too less`);\n\n// 5. , 6.\nconsole.log(\n  dogs.some(\n    dog => dog.recFood * 1.1 >= dog.curFood && dog.curFood >= dog.recFood * 0.9\n  )\n);\n\n//7.\nconst inRangeDogs = dogs.filter(\n  dog => dog.recFood * 1.1 >= dog.curFood && dog.curFood >= dog.recFood * 0.9\n);\n\nconsole.log(inRangeDogs);\n\n//8.\nconst dogsCopy = dogs.slice().sort((a, b) => a.recFood - b.recFood);\nconsole.log(dogsCopy);\n"],"names":["$c1ce9d969bfa6909$var$accounts","owner","movements","interestRate","pin","$c1ce9d969bfa6909$var$labelWelcome","document","querySelector","$c1ce9d969bfa6909$var$labelBalance","$c1ce9d969bfa6909$var$labelSumIn","$c1ce9d969bfa6909$var$labelSumOut","$c1ce9d969bfa6909$var$labelSumInterest","$c1ce9d969bfa6909$var$containerApp","$c1ce9d969bfa6909$var$containerMovements","$c1ce9d969bfa6909$var$btnLogin","$c1ce9d969bfa6909$var$btnTransfer","$c1ce9d969bfa6909$var$btnLoan","$c1ce9d969bfa6909$var$btnClose","$c1ce9d969bfa6909$var$btnSort","$c1ce9d969bfa6909$var$inputLoginUsername","$c1ce9d969bfa6909$var$inputLoginPin","$c1ce9d969bfa6909$var$inputTransferTo","$c1ce9d969bfa6909$var$inputTransferAmount","$c1ce9d969bfa6909$var$inputLoanAmount","$c1ce9d969bfa6909$var$inputCloseUsername","$c1ce9d969bfa6909$var$inputClosePin","$c1ce9d969bfa6909$var$displayMovements","sort","innerHTML","slice","a","b","forEach","mov","i","type","html","insertAdjacentHTML","$c1ce9d969bfa6909$var$currentAccount","acc","userName","toLowerCase","split","map","name","join","$c1ce9d969bfa6909$var$updateUI","currentAccount","balance","reduce","textContent","account","incomes","filter","out","Math","abs","interset","deposite","int","arr","toFixed","$c1ce9d969bfa6909$var$calcDisplaySummary","addEventListener","e","preventDefault","find","value","Number","style","opacity","blur","amount","reserverAcc","push","index","findIndex","splice","some","$c1ce9d969bfa6909$var$sorted","$c1ce9d969bfa6909$var$dogs","weight","curFood","owners","dog","dogs","recFood","console","log","$c1ce9d969bfa6909$var$saraDog","includes","$c1ce9d969bfa6909$var$dogOwners","flatMap","ele","$c1ce9d969bfa6909$var$ownersEatTooLess","$c1ce9d969bfa6909$var$inRangeDogs","$c1ce9d969bfa6909$var$dogsCopy"],"version":3,"file":"index.1ce449d1.js.map"}